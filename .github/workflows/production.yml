name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: myappdb
          POSTGRES_HOST_AUTH_METHOD: trust   # <-- CI-only, disables password checks
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres -d myappdb"
          --health-interval=10s --health-timeout=5s --health-retries=20

    env:
      TEST_DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/myappdb
      PYTHONUNBUFFERED: '1'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: System deps (psql client)
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev postgresql-client

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres -d myappdb; then
              echo "Postgres is ready"; break
            fi
            echo "Waiting for Postgres... ($i/30)"; sleep 2
          done

      - name: Verify DB login
        run: |
          psql -h localhost -U postgres -d myappdb -c "select current_user, current_database();"

      - name: Run Alembic migrations (sync URL)
        env:
          DATABASE_URL: postgresql+psycopg2://postgres:postgres@localhost:5432/myappdb
        run: alembic upgrade head

      - name: Debug test DB driver
        run: |
          python - <<'PY'
          import os
          from sqlalchemy.engine.url import make_url
          u = os.environ["TEST_DATABASE_URL"]
          print("TEST_DATABASE_URL =", u)
          print("driver =", make_url(u).drivername)
          PY

      - name: Run tests (async URL only; clear PG*)
        env:
          DATABASE_URL: ""
          SQLALCHEMY_DATABASE_URI: ""
          PGUSER: ""
          PGPASSWORD: ""
          PGHOST: ""
          PGDATABASE: ""
        run: pytest -q